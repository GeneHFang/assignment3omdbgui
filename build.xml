<project name="Ser321 Spring 2020 Assign2" default="targets" basedir=".">

   <!-- define tasks used in the prepare task for platform identification -->
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
   <!-- set global properties for this build -->
   <property name="src" value="./src" />
   <property name="build" value="./classes" />
   <property name="docs" value="./docs" />
   <property name="lib" value="./lib" />
   <property name="hostId" value="hostIP" />
   <property name="regPort" value="portNum" />
   <property name="userId" value="first.lastname" />
   <property name="omdbkey" value="your-omdb-api-key" />
   <property name="parentDir" value="${user.dir}${file.separator}" />

   <path id="compile.classpath">
      <pathelement location="${build}"/>
      <fileset dir="${lib}">
         <include name="json.jar"/>
      </fileset>
	<fileset dir="${lib}">
         <include name="assign2Gui.jar"/>
      </fileset>
   </path>

   <target name="targets">
      <echo message="targets are clean, prepare, setup.javafx, compile, and client. "/>
      <echo message="to run enter: ant client  -DuserId=${userId} -Domdbkey=${omdbkey}"/>
   </target>

   <target name="prepare">
      <!-- Create the time stamp -->
      <tstamp/>
      <!-- Create the build directory structure used by compile -->
      <echo message="home defined as: ${home}" />
      <mkdir dir="${build}" />
      <!-- Platform identification -->
      <condition property="build.host.islinux">
        <and>
          <os family="unix" />
          <not>
            <contains string="${os.name}" substring="mac"
                      casesensitive="false" />
          </not>
        </and>
      </condition>
      <condition property="build.host.platform" value="linux">
        <isset property="build.host.islinux" />
      </condition>

      <condition property="build.host.ismac">
        <and>
          <os family="unix" />
          <contains string="${os.name}" substring="mac" casesensitive="false"/>
        </and>
      </condition>
      <condition property="build.host.platform" value="mac">
        <isset property="build.host.ismac" />
      </condition>

      <fail unless="build.host.platform"
            message="Building on ${os.name} is not supported" />
      <echo message="build.host.platform is: ${build.host.platform}"/>
   </target>

   <target name="compile" depends="prepare"
           description="Compile Java sources">
      <javac srcdir="${src}/server"
             includeantruntime="false"
             destdir="${build}">
         <classpath refid="compile.classpath"/>
      </javac>
      <javac srcdir="${src}/client"
             includeantruntime="false"
             destdir="${build}">
         <classpath refid="compile.classpath"/>
      </javac>
   </target>

   <target name="client" depends="compile"
           description="execute the assignment client">
      <java classname="ser321.assign2.lindquis.MediaLibraryApp"
            fork="yes">
         <arg value="${userId}"/> 
         <arg value="${omdbkey}"/>
         <arg value="${hostId}"/>
         <arg value="${regPort}"/> 
         <classpath refid="compile.classpath"/>
      </java>
   </target>

   <target name="server" depends="compile"
           description="execute the assignment server">
      <parallel>
       <exec dir="${basedir}"
             executable="rmiregistry">
         <arg value="${regPort}"/>
         <env key="CLASSPATH" path="${basedir}/${build}"/>
       </exec>
       <sequential>
         <sleep seconds="10"/>
         <java classname="ser321.assign2.lindquis.SeriesLibraryImpl" fork="yes">
<!--           <sysproperty key="java.security.policy" value="policyServer"/> -->
           <sysproperty key="java.rmi.server.hostname" value="${hostId}"/>
           <arg value="${hostId}"/> 
           <arg value="${regPort}"/> 
           <classpath refid="compile.classpath"/>
         </java>
       </sequential>
     </parallel>
   </target>

   <target name="clean">
     <!-- Delete the ${build} and ${docs} directory trees -->
     <delete dir="${build}" />
   </target>
</project>
